@model List<task5.Models.Details>

@{
    ViewBag.Title = "GetDetails";
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
}

<h2>GetDetails</h2>
@Html.ActionLink("Create", "Index")

@TempData["Success"]

@using (Html.BeginForm("GetDetails", "Details", FormMethod.Get))
{
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-lg-4 mx-auto">
                <div class="form-group">
                    <label for="searchName">Search by Name:</label>
                    <input type="text" class="form-control" id="searchName" name="searchString" placeholder="Enter name">
                </div>
                <button type="submit" class="btn btn-primary" id="searchButton">Search</button>
            </div>
        </div>
        <div id="results" class="mt-3"></div>
    </div>

    <h2>Details</h2>

    <div class="state-container">
        @foreach (var state in ViewBag.States)
        {
            <label class="state-label">
                <input type="checkbox" class="state-checkbox" value="@state.StateName" /> @state.StateName
            </label>
            <div class="city-container" id="cities-@state.StateName" style="display:none; margin-left: 20px;">
                <!-- Cities will be populated here -->
            </div>
        }
    </div>

    <div class="container mt-4">
        <div class="gridContainer">
            <table class="table table-bordered table-striped" style="width: 100%;">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Mobile</th>
                        <th>State</th>
                        <th>City</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>@user.Mobile</td>
                            <td>@user.StateName</td>
                            <td>@user.CityName</td>
                            <td>
                                <a href="@Url.Action("Edit", new { id = user.Id })" class="btn btn-warning btn-sm" title="Edit">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@user.Id)">
                                    <i class="bi bi-trash3-fill"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="pagination-container">
            <div id="pagination"></div>

            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-end">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("GetDetails", new { pageNumber = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("GetDetails", new { pageNumber = i, pageSize = ViewBag.PageSize })">@i</a>
                        </li>
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("GetDetails", new { pageNumber = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {

        $('.state-checkbox').on('change', function () {
            var selectedState = $(this).val();
            var isChecked = $(this).is(':checked');

            $('.state-checkbox').not(this).prop('disabled', isChecked);
            $('.state-label').not($(this).closest('.state-label')).css('opacity', isChecked ? 0.5 : 1);

            if (isChecked) {
                $.ajax({
                    url: '@Url.Action("GetCitiesByState", "Details")',
                    type: 'GET',
                    data: { stateName: selectedState },
                    success: function (data) {
                        var cityContainer = $('#cities-' + selectedState);
                        cityContainer.empty();
                        $.each(data, function (index, city) {
                            cityContainer.append(
                                '<label>' +
                                    '<input type="checkbox" class="city-checkbox" value="' + city.CityName + '" /> ' + city.CityName +
                                '</label><br />'
                            );
                        });
                        cityContainer.show();
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            } else {
                $('#cities-' + selectedState).hide();
                $('.state-checkbox').prop('disabled', false);
                $('.state-label').css('opacity', 1);
            }
        });
     







        $(document).on('change', '.city-checkbox', function () {
            var selectedCities = $('.city-checkbox:checked').map(function () {
                return $(this).val();
            }).get().join(',');

            $.ajax({
                url: '@Url.Action("GetDetails", "Details")',
                type: 'GET',
                data: { citynames: selectedCities },
                success: function (data) {
                    var gridContainer = $('table tbody');
                    gridContainer.empty();
                    $.each(data, function (index, detail) {
                        gridContainer.append(
                            '<tr>' +
                                '<td>' + detail.Name + '</td>' +
                                '<td>' + detail.Email + '</td>' +
                                '<td>' + detail.Mobile + '</td>' +
                                '<td>' + detail.StateName + '</td>' +
                                '<td>' + detail.CityName + '</td>' +
                                '<td>' +
                                    '<a href="/Details/Edit/' + detail.Id + '" class="btn btn-warning btn-sm" title="Edit">' +
                                        '<i class="bi bi-pencil"></i>' +
                                    '</a>' +
                                    '<button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(' + detail.Id + ')">' +
                                        '<i class="bi bi-trash3-fill"></i>' +
                                    '</button>' +
                                '</td>' +
                            '</tr>'
                        );
                    });
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + error);
                }
            });
        });


        $('#searchName').on('keyup', function () {
            var searchString = $(this).val();
            $.ajax({
                url: '@Url.Action("GetDetails", "Details")',
                type: 'GET',
                data: { searchString: searchString },
                success: function (data) {
                    $('#results').empty();
                    if (data && data.length > 0) {
                        $.each(data, function (index, item) {
                            $('#results').append('<div class="result-item">' + item.Name + '</div>');
                        });
                    } else {
                        $('#results').append('<div>No results found</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching data:', error);
                }
            });
        });
    });

    function confirmDelete(Id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Details/Delete',
                    type: 'POST',
                    data: { Id: Id },
                    success: function (response) {
                        Swal.fire('Deleted!', 'The record has been deleted.', 'success');
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        Swal.fire('Error!', 'There was a problem deleting the user.', 'error');
                    }
                });
            }
        });
    }
</script>
